inpt = "                                           I     U       O   M           N     O       S
                                           X     T       X   C           D     N       A
  #########################################.#####.#######.###.###########.#####.#######.#######################################
  #.....#.......#.....#.....#.....#...#.#...#...#...#.....#.#...........#.....#.....#.............#.#...#...#...#.......#.....#
  #####.#######.#####.#####.#.###.###.#.#.###.#.###.#.#.###.###.###.#####.#.#######.#####.#.#######.###.#.###.###.#######.#####
  #.#.#...#...#.....#.........#...........#.#.#...#.#.#.....#...#.......#.#...#.#.....#.#.#...............#.........#.........#
  #.#.###.###.###.#####.#######.#####.#.###.#.###.#.#.#########.#.#########.###.#.#####.###.###.#####.#.#####.###.#########.###
  #.....#.........#.....#...#.#.....#.#.....#.#...#.#.#...#...#.#.....#...#.#.#.........#.....#.....#.#.........#.#...#...#...#
  #####.#####.#.#.###.#####.#.#.#####.#.#.#.#.###.#.#.###.###.#####.#####.#.#.#####.#######.###.#.#.#######.###.#####.###.#.###
  #...#.......#.#.......#.......#.#.#.#.#.#.#...#.#.#.......#.#.#.....#.........#.....#.....#.#.#.#.......#.#.........#.......#
  #.###############.#####.#####.#.#.#######.###.#.#.###.#.###.#.#.#.###.###.#####.#######.#.#.###.#.###.#.#.###.#####.#####.#.#
  #...#.#.#...#.......#.......#...#.....#...#...#.#.#...#.....#...#...#.#...#.......#...#.#.....#.#...#.#.#.#.#.#.....#.#.#.#.#
  #.###.#.#.#######.#.#.#.#####.###.###.#.#.#.###.#.#.###.#.###.###########.#####.#####.###.#.#.#.#.#########.###.#####.#.#.###
  #.#.......#...#...#.#.#...#...#.#.#.....#.#...#...#.#...#.#.......#.#.#.#.#.........#.....#.#.#.#...........#.#...#.#.#.#...#
  #.###.###.#.#####.###.#.###.###.###.#####.###.#.#.#.#############.#.#.#.#.#######.#.###.#.#####.#.#.#####.#.#.#####.#.#.#.###
  #.#...#...#.#.#.#...#.#...#.#.....#.#.....#...#.#.#...#.#.#...........#.....#.....#.#...#.....#.#.#.....#.#.....#...#.#.#.#.#
  #.#######.#.#.#.#.#############.#####.###.#.#######.#.#.#.#.###.#.#####.#########.#####.#################.#######.#.#.#.#.#.#
  #.....#.......#.#.#...#...#...#...#.#.#...#.....#...#.#.....#.#.#.#.......#.#.#...#.......#.#...#.#.....#.....#.#.#.....#...#
  ###.#########.#.###.#####.#.###.###.###.#.#.#######.###.###.#.#######.###.#.#.#.#.#.#####.#.#.###.#.#.#####.###.#######.#.###
  #.#.....#.#...#...#...#.#.#...#...#...#.#.#.....#...#...#.......#...#.#.......#.#.#.#.........#.....#...#.#.#.#...#.........#
  #.###.###.###.###.#.###.#.###.#.#####.###.#.#.###.#.#########.###.#.#####.#######.###.###.#####.#.#.#####.###.###.#######.###
  #.........#.#...#.#.#...........#.#.......#.#...#.#.#...#.........#.#.....#.#.......#.#.#.#.#...#.#.#.....#.#...#.#.....#...#
  ###.#.#####.#.###.#.#####.#####.#.#######.#.###.###.#.#####.#.#.#########.#.#####.#####.#.#.#.#.#######.###.#.###.#.#.###.###
  #.#.#.#...#.........#.#.#.#.#.#...#.#.....#.#.#.#.......#.#.#.#.#...........#.#.......#.....#.#.#.#...#...#...#.....#...#.#.#
  #.#.#####.#.###.###.#.#.###.#.#.#.#.#####.#.#.#.###.#.###.#####.#####.#######.###.#######.###.#.#.#.###.#####.###.#.###.#.#.#
  #...#.#.#.#.#.#.#.....#.........#.#...#...#...#.#...#.#...#.......#...#...#...........#.#.....#.#...#.#.#...#...#.#.#.......#
  ###.#.#.#.###.#####.#.#####.#.#.###.###.#.#.#.#####.#####.#.#.#.#.#.###.#.#.###.#.#.###.#.#.#####.###.#.###.#.#.#########.###
  #...#.#...#...#.#.#.#.......#.#.........#.#.#.#...........#.#.#.#.#.#...#.#...#.#.#.#.#.#.#.#.............#.#.#.#.....#.#.#.#
  ###.#.#.###.###.#.###.#.#.#####.###.#####.#.#######.#############.#.#.###.###.#######.#.#.###.###.#.#######.#.#######.#.#.#.#
  #.#.....#.#.#.#.#.....#.#.#.#...#.......#.#...#...........#...#...#...#...#...#...#...........#...#.#.#...#.....#...#.#.....#
  #.#####.#.#.#.#.#########.#.#.#.#.#.###.###.#######.#######.###.###.###.#.###.#.#####.###.#.#########.#.###.#######.#.###.###
  #...#.....#.#.#.#.#.#...#.#...#.#.#.#.#...#.......#.........#.....#.#...#.#.....#.#.#...#.#.#.#...#.....#.....#.#...#.#.....#
  #.#######.#.#.#.#.#.#.###.#.#.#.#.###.###.#.#.#####.#.###.#####.#######.###.#.###.#.#.#.#.#.#.###.###.#####.#.#.#.###.#.#####
  #...#.#...#...........#...#.#.#.#.#.......#.#...#...#.#...#.......#.......#.#...#.....#.#.#...#.......#...#.#.......#.....#.#
  #.#.#.###.###.###.#############.#########.###.#########.#####.#######.#####.#######.#################.#.#######.#####.###.#.#
  #.#.....#.#.#.#.#.....#.#.....#.#        C   S         P     R       W     B       A        #...#.#...#...#.#.....#...#...#.#
  ###.#.###.#.#.#.#######.###.###.#        S   A         P     D       A     E       D        #.###.###.#.###.#.###########.#.#
  #...#.#...........#...#.....#...#                                                           #.#.......#.........#.#.#.....#.#
  ###.#####.#####.###.###.###.#####                                                           #.#####.#.#.#.#.#.###.#.###.#.#.#
  #...#.#...#.........#.....#.#...#                                                           #.....#.#...#.#.#.#.#.......#...#
  ###.#.###.#.###########.#####.###                                                           #.#.#.#.###.###.#.#.#######.#.#.#
EY........#.#...#...#.#.......#.#.#                                                           #.#.#.#...#.#.#.#...#.......#.#.#
  #.###.#.#.#.#.#.#.#.###.#####.#.#                                                           #.#.#####.###.###.#####.#.###.###
  #.#...#...#.#...#................RB                                                       VN..#.......#.....#.......#.#......CS
  #############.#########.#.#######                                                           #############.#.###.#######.###.#
  #...#.#...#.....#.#.#...#.#.....#                                                           #.........#...#.#...#.#...#...#.#
  #.###.###.###.###.#.###.#####.#.#                                                           ###.###.###.#.#######.#.#########
BE....#...#...#.#.......#.#.#...#.#                                                         ON..#.#...#...#.#...#...#.#.#...#.#
  #.#####.###.#######.#####.###.#.#                                                           #.#.#.#####.#.#.#####.#.#.#.###.#
  #.#.#.......#.........#.....#.#.#                                                           #.#.#.#...#.#.#.#.........#.#.#..MR
  #.#.#.#####.#####.#.#.###.###.#.#                                                           #.#.#.#####.#.#.###.#.#####.#.#.#
  #.....#...#.......#.#.........#..QG                                                       WP....#.......#.......#............VN
  #######.###.###.###.#############                                                           ###.###########.#.#######.#######
ZM........#.....#...#.#...#.....#.#                                                           #.#...#...#...#.#.#.....#.#.....#
  #.#.#########.#.#####.#######.#.#                                                           #.#####.#.###.#######.#.###.#.###
  #.#.......#.#.#.....#.#.....#....ND                                                       UE........#...........#.#.#...#...#
  ###.#######.#########.###.#.#.###                                                           #.###.#.#.#####.###.#.#.###.#.###
  #...#...#...#...#.......#.#.....#                                                           #.#.#.#.#...#...#...#.#.....#....GN
  #.#####.###.#.###.###.#####.#.###                                                           #.#.###########.#.###.#####.#.#.#
  #...................#.......#...#                                                           #.#.......#.#.#.#.......#...#.#.#
  #####.#####.###.#.#####.#########                                                           ###.#.#.###.#.###.###############
  #...#.....#.#...#.#...#.#.#.....#                                                         UT....#.#.#.#.#...#.#.#.......#....WA
  #.#.###############.###.#.#.#####                                                           ###.#####.#.#.###.#.#.###.#.#.#.#
WP..#...#.....#.#.#.....#.#.......#                                                           #.....#.....#.#.....#.#...#...#.#
  #.#.#.###.###.#.###.#.###.#.#####                                                           #.#.#.###.###.#########.###.#.###
  #.#.#.....#.....#.#.#.....#.....#                                                           #.#.#.#.......#.#.#.....#...#.#.#
  #######.#.#.#.###.#.#.#.#.#######                                                           #.#####.###.#.#.#.#####.###.#.#.#
  #...#.#.#...#.......#.#.#........OX                                                         #.........#.#...........#...#.#.#
  #.###.###########.###.###.#.###.#                                                           #.#######.#####.###########.###.#
  #.......#.....#...#...#...#.#...#                                                           #.#.....#.#.#.#.#.......#...#....PP
  #.###.#.###.#.###################                                                           ###.###.###.#.###.#.###.#####.###
zO..#...#.#...#.#.#.....#...#.....#                                                         ZR..#.#.#...#.....#.#.#.....#.....#
  ###.#####.###.#.#.#####.###.###.#                                                           #.#.#.#.#####.#####.###.#####.#.#
  #...#...#...#.....#.#.........#..FK                                                         #.....#.....#.#...#.#...#...#.#.#
  #.###.#.###.#####.#.###.#.#.#.#.#                                                           #.###.###.###.###.#.###.#.#.###.#
ZZ......#.......#.#.......#.#.#.#.#                                                           #.#...#.............#.....#.....#
  #.###.###.#.###.###.#############                                                           ###.#####.###.#################.#
  #.#...#.#.#.......#.#.#.........#                                                           #.....#.....#.#...............#.#
  #######.#####.#.#.###.#.###.###.#                                                           #########.#####.###.#######.#####
RX..#.#.#.....#.#.#.#.#.....#.#....GN                                                         #.#...#...#.....#.....#.#........UE
  #.#.#.#.#.#########.###.#.###.#.#                                                           #.#.#####.###.#.###.###.###.###.#
  #.....#.#.....#.#.....#.#...#.#.#                                                         ZM....#...#.#...#.#.#.......#...#.#
  #.#.#.#.#.#####.###.#####.#.#.#.#                                                           #.#.###.###.#.###.#.#.#####.###.#
  #.#.#...#.................#.#.#.#                                                           #.#.........#...#...#...#.....#.#
  #.###.#.#####.###.#.#####.#####.#    M       P           I     R     E     z           M    #.###.#.#.###.#######.#####.###.#
  #.#...#.....#...#.#...#.#...#.#.#    C       G           X     X     Y     O           R    #...#.#.#.#...#.....#.....#...#.#
  #####.###.###.#.#.#####.#.###.#######.#######.###########.#####.#####.#####.###########.#########.#######.#.#####.#.#.###.###
  #.#.#...#.#...#.#.#.............#.....#.#.#...#...#.........#...#.......#.......#.#...#.#.......#.#.............#.#.#.#.#...#
  #.#.#.#.#.###.###.###.###.###.###.#.#.#.#.###.#.#.###.#########.#######.#######.#.###.#.###.#.#####.###.#.###.#########.#####
  #...#.#.#...#...#...#...#...#.#...#.#...#.#.....#.#...#.....#...#.#.#.#.....#.#.#.#.#.#.....#.#...#...#.#.#.............#...#
  ###.#.#######.#.#####.###.#.#####.#.###.#.#######.#.###.#.###.#.#.#.#.###.###.#.#.#.#.#.#######.#######.#####.###.#######.###
  #.......#.....#.#.......#.#...#...#.#.....#...#.#.#.....#...#.#.#...........#.#...#...#...........#.#.#...#.....#...........#
  #.#.#.#.#.#.#.#.#.#.#.#.###.#.###.#.#.###.###.#.#.#######.#####.###.###.#.###.#.###.#.#.#.###.#.#.#.#.#.###.#.###.###.###.###
  #.#.#.#.#.#.#.#.#.#.#.#.#...#...#.#.#.#.#.#.#.........#...#.#...#.....#.#...#...#...#...#...#.#.#.#.#...#...#.#.....#.#.#...#
  ###.#.#####.#######.#.###.###.###.#####.#.#.#.#####.#####.#.###.#####.#.#.#####.#.#.###.#######.#.#.#.#######.#######.#.#####
  #...#...#...#.#.#...#...#.#.#...#.#.......#...#.#...#.....#.....#.....#.#...#...#.#.#.........#.#.#...#.........#...........#
  ###.#####.###.#.#.#.#######.#.#########.#.#.###.#.#####.#.#.#.#####.#####.#####.#.#########.#########.#####.#.###.#####.###.#
  #.....#.....#.....#.......#.....#.......#.#.....#...#...#.#.#.....#.#.#.#.#...#.#.......#...........#.#.#.#.#...#...#.....#.#
  ###.#.###.#######.###.###.###.###.###.###.#.#.###.###.###.#######.#.#.#.#####.#.#.#.#########.###.#.#.#.#.#####.#.#.#.#.#.#.#
  #...#...#...#.#.....#.#.....#.#...#.#.#...#.#...#.#.#.#.#.#.#...#.#.....#.#...#.#.#.........#.#.#.#.#.........#.#.#.#.#.#.#.#
  #.###.#.###.#.#.#.#.#####.#########.#####.#.#######.###.#.#.###.#.#.###.#.###.#.#####.#######.#.#######.#.#########.###.#.#.#
  #.#...#.#...#...#.#.#.......#...#.#.......#.#.......#...#...#...#.#...#.#.#.......#...#.#.#.#...#.....#.#.#.#...#.....#.#.#.#
  #.#.#.#.#####.#.#.#####.#####.###.#.#####.#.###.#######.#.#####.#.#####.#.###.#######.#.#.#.###.#.#####.###.#.#####.#.#######
  #.#.#.#...#...#.#.#.......#.#.#.#.#.#.#.#.#.#...#.#.#...#...#.#.......#.....#...#...........#.#...#.#.....#...#...#.#...#.#.#
  ###.###.#.#.#########.#####.#.#.#.###.#.#.#.###.#.#.###.#.###.#.###.#.###.###.#####.###.#####.#####.#.#.###.#####.###.###.#.#
  #.....#.#.#.#.........#.......#.#...#.....#.....#.....#...#.......#.#...#.#.......#...#.......#.....#.#...#...#.....#.#.#...#
  #.#.###.#.#.#.###.#.#######.#.#.#.#####.#.#.###.###.#.#.#####.#.#####.###.###.#########.###.#.###.#####.###.###.#.#####.#.###
  #.#...#.#.#.#.#.#.#...#.....#.........#.#.#.#.....#.#.#...#.#.#...#.#.#.#.#.......#.......#.#...#...#.#.........#...........#
  #.#.###.#######.#.#.#####.#########.#####.#######.#.#.#.###.###.#.#.###.#.#####.#######.#########.###.#.###.#.#.###.#.#.###.#
  #.#.#.......#...#.#.#.#...#...#.....#.#...#.......#.#.......#...#.#.........#...#...............#.#.#.#.#.#.#.#...#.#.#.#.#.#
  #.#####.#######.#####.#######.#.###.#.###.#.#######.###########.#.#.###########.#####.###.###.###.#.#.###.###.#.#####.###.###
  #.#.....#...............#.......#.....#...#.......#...#...#...#.#.#...#.......#.....#...#...#...#.......#...#.#.....#.#...#.#
  #.#.###.#.#.#.#.#######.#.#.#.#######.###.#######.###.###.#.#.###.###.#####.#.#.#.###.###########.###.###.#####.#.#####.###.#
  #.#.#...#.#.#.#.#.#.......#.#...#.........#.........#...#.#.#...#.#.#...#.#.#...#.#.......#.........#.........#.#.#...#...#.#
  #.#.###.###.#####.#.#####.#.#####.###.#.###.#.#######.###.###.#.#.#.###.#.#.###.#####.#.###.#####.#.#.###.#####.#####.#.###.#
  #.#.#.#.#...#...#...#.....#.#.....#...#.#.#.#...#...#...#.#...#...#.......#...#.....#.#.......#.#.#.#.#.....#.#.............#
  #####.#.#.#.#.#.###.#.###.#####.#####.###.#.###.#.#.#.###.#.#######.###.#####.#######.#.#.#.###.#.#.###.#####.###.#.#.###.#.#
  #.......#.#.#.#.....#.#.....#...#.......#.....#.#.#.......#.......#...#.#...........#.#.#.#.....#.#.#...........#.#.#...#.#.#
  #####################################.#######.#########.#.#######.#.###########.#######.#####################################
                                       Z       A         R A       F Q           R       P
                                       R       D         B A       K G           D       G                                       "
# inpt = "             Z L X W       C
#              Z P Q B       K
#   ###########.#.#.#.#######.###############
#   #...#.......#.#.......#.#.......#.#.#...#
#   ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###
#   #.#...#.#.#...#.#.#...#...#...#.#.......#
#   #.###.#######.###.###.#.###.###.#.#######
#   #...#.......#.#...#...#.............#...#
#   #.#########.#######.#.#######.#######.###
#   #...#.#    F       R I       Z    #.#.#.#
#   #.###.#    D       E C       H    #.#.#.#
#   #.#...#                           #...#.#
#   #.###.#                           #.###.#
#   #.#....OA                       WB..#.#..ZH
#   #.###.#                           #.#.#.#
# CJ......#                           #.....#
#   #######                           #######
#   #.#....CK                         #......IC
#   #.###.#                           #.###.#
#   #.....#                           #...#.#
#   ###.###                           #.#.#.#
# XF....#.#                         RF..#.#.#
#   #####.#                           #######
#   #......CJ                       NM..#...#
#   ###.#.#                           #.###.#
# RE....#.#                           #......RF
#   ###.###        X   X       L      #.#.#.#
#   #.....#        F   Q       P      #.#.#.#
#   ###.###########.###.#######.#########.###
#   #.....#...#.....#.......#...#.....#.#...#
#   #####.#.###.#######.#######.###.###.#.#.#
#   #.......#.......#.#.#.#.#...#...#...#.#.#
#   #####.###.#####.#.#.#.#.###.###.#.###.###
#   #.......#.....#.#...#...............#...#
#   #############.#.#.###.###################
#                A O F   N
#                A A D   M                     "

# inpt = "         A
#          A
#   #######.#########
#   #######.........#
#   #######.#######.#
#   #######.#######.#
#   #######.#######.#
#   #####  B    ###.#
# BC...##  C    ###.#
#   ##.##       ###.#
#   ##...DE  F  ###.#
#   #####    G  ###.#
#   #########.#####.#
# DE..#######...###.#
#   #.#########.###.#
# FG..#########.....#
#   ###########.#####
#              Z
#              Z       "

mutable struct portal
    Eingang::Tuple
    Ausgang::Tuple
    lable::String
end

# function getOtherEnd(x, y, portals)
#     for p = portals
#         if (x, y) == p.eingang
#             return p.ausgang
#         elseif (x, y) == p.ausgang
#             return p.eingang
#         end
#     end
# end

function isChar(c::String)
    return c != " " && c != "#" && c != "\$" && c != "."
end

function getPossibleSteps((x, y, d), mazes, portals)
    tmp::Vector{Tuple} = []
    mazes[d][x+1, y] == "." && push!(tmp, (x+1, y, d))
    mazes[d][x, y+1] == "." && push!(tmp, (x, y+1, d))
    mazes[d][x-1, y] == "." && push!(tmp, (x-1, y, d))
    mazes[d][x, y-1] == "." && push!(tmp, (x, y-1, d))
    otherEnd = getOtherEnd(x, y, d, portals)
    # println(typeof(otherEnd))
    isChar(mazes[d][x+1, y]) && typeof(otherEnd) != Nothing && push!(tmp, otherEnd)
    isChar(mazes[d][x, y+1]) && typeof(otherEnd) != Nothing && push!(tmp, otherEnd)
    isChar(mazes[d][x-1, y]) && typeof(otherEnd) != Nothing && push!(tmp, otherEnd)
    isChar(mazes[d][x, y-1]) && typeof(otherEnd) != Nothing && push!(tmp, otherEnd)
    return tmp
end

function getOtherEnd(x, y, d, portals)
    # println((x, y))
    for p = portals
        if p.lable != "AA"
            if p.Ausgang == (x, y, -1) && p.lable == "ZZ" && d == 1
                return (Inf, Inf, -1)
            end
            if p.Eingang == (x, y, 1)
                # println(p)
                # d + p.Ausgang[3] == 0 && return nothing
                # global changedDimension += 1
                return (p.Ausgang[1], p.Ausgang[2], d + 1)
            elseif p.Ausgang == (x, y, -1)
                # println(p)
                p.Eingang[1] == 1 && p.Eingang[2] == 1 && return nothing
                d == 1 && return nothing
                # global changedDimension += 1
                return (p.Eingang[1], p.Eingang[2], d - 1)
            end
        end
    end
end

function search(Mazes, portals, possiblePlaces, reference)
    Mazes[1] = copy(Mazes[1])
    step = -1
    finished = false
    possiblePlaces[1] = (possiblePlaces[1][1], possiblePlaces[1][2], 1)
    println(possiblePlaces)
    while !finished
        # length(Mazes) > 1 && (printMaze(Mazes[2]); sleep(0.1))
        tmp = []
        for i = possiblePlaces
            i[3] > length(Mazes) && (print("Added new Iteration on Step $step, Places to search: ");println(length(possiblePlaces)))
            i[3] > length(Mazes) && push!(Mazes, copy(reference))
            if i == (Inf, Inf, -1)
                println("Destination found after $step Steps")
                finished = true
                break
            end
            Mazes[i[3]][i[1], i[2]] = "\$"
            # println("Searched $step")
            append!(tmp, getPossibleSteps(i, Mazes, portals))
        end
        # println("Step made")
        step += 1
        # step % 50 == 0 && println(step)
        possiblePlaces = tmp
        # println(length(tmp))
        # printMaze(Mazes[1])
        # sleep(0.1)
        # length(Mazes) >= 8 && println(length(tmp))
        # step > 2000 && println("ExampleMode")
        # step > 2000 && break
    end
end

function printMaze(Maze)
    toPrint = ""
    for r = eachrow(Maze)
        tmp = ""
        for c = r
            tmp *= c
        end
        toPrint *= tmp * "\n"
    end
    print(toPrint)
end

# changedDimension = 0

Maze = Matrix{String}(undef, 123, 131)
# Maze = Matrix{String}(undef, 40, 47)

x = 2
for l = split(inpt, "\n")
    y = 2
    for t = split(l, "")
        global Maze[x, y] = t
        y += 1
    end
    global x += 1
end

for i = eachindex(Maze)
    if !isassigned(Maze, i)
        Maze[i] = " "
    end
end

portals = []
for x = 1:size(Maze, 1)
    for y = 1:size(Maze, 2)
        if isChar(Maze[x, y])
            if (x < 5 || x > size(Maze, 1)-5) || (y < 5 || y > size(Maze, 2)-5)
                if isChar(Maze[x+1, y])
                    found = false
                    for p = portals
                        if p.lable == Maze[x, y] * Maze[x+1, y] || p.lable == Maze[x+1, y] * Maze[x, y]
                            p.Ausgang = Maze[x+2, y] == "." ? (x+2, y, -1) : (x-1, y, -1)
                            found = true
                        end
                    end
                    !found && push!(portals, portal((2, 2, 1), Maze[x+2, y] == "." ? (x+2, y, -1) : (x-1, y, -1), Maze[x, y] * Maze[x+1, y]))
                elseif isChar(Maze[x, y+1])
                    found = false
                    for p = portals
                        if p.lable == Maze[x, y] * Maze[x, y+1] || p.lable == Maze[x, y+1] * Maze[x, y]
                            p.Ausgang = Maze[x, y+2] == "." ? (x, y+2, -1) : (x, y-1, -1)
                            found = true
                        end
                    end
                    !found && push!(portals, portal((2, 2, 1), Maze[x, y+2] == "." ? (x, y+2, -1) : (x, y-1, -1), Maze[x, y] * Maze[x, y+1]))
                end
            else
                if isChar(Maze[x+1, y])
                    found = false
                    for p = portals
                        if p.lable == Maze[x, y] * Maze[x+1, y] || p.lable == Maze[x+1, y] * Maze[x, y]
                            p.Eingang = Maze[x+2, y] == "." ? (x+2, y, 1) : (x-1, y, 1)
                            found = true
                        end
                    end
                    !found && push!(portals, portal(Maze[x+2, y] == "." ? (x+2, y, 1) : (x-1, y, 1), (2, 2, -1), Maze[x, y] * Maze[x+1, y]))
                elseif isChar(Maze[x, y+1])
                    found = false
                    for p = portals
                        if p.lable == Maze[x, y] * Maze[x, y+1] || p.lable == Maze[x, y+1] * Maze[x, y]
                            p.Eingang = Maze[x, y+2] == "." ? (x, y+2, 1) : (x, y-1, 1)
                            found = true
                        end
                    end
                    !found && push!(portals, portal(Maze[x, y+2] == "." ? (x, y+2, 1) : (x, y-1, 1), (2, 2, -1), Maze[x, y] * Maze[x, y+1]))
                end
            end
        end
    end
end


# printMaze(Maze)

println(portals)
# printMaze(Maze)

for p = portals
    if p.lable == "AA"
        search([copy(Maze)], portals, [p.Ausgang], copy(Maze))
    end
end
